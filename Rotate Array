class Solution {

    /**
    First approach:

        public void rotate(int[] nums, int k) {
            int n = nums.length;
            int numsCopy[] = nums.clone();

            for(int i=0; i<n; i++) {
                nums[(i+k)%n] = numsCopy[i];
            }
        }
     */
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        nums = reverse(nums, 0, n);

        nums = reverse(nums, 0, k%n);
        nums = reverse(nums, k%n, n);
        
    }

    public static int[] reverse(int[] nums, int start, int end) {
        int j = 0;
        int n = end+start-1;
        if(n >= 0) {
            for(int i=start; i<=n/2; i++) {
                int temp = nums[end-1-j];
                nums[end-1-j] = nums[i];
                nums[i] = temp;
                j++;
            }
        }
        return nums;
    }
}
